{"ast":null,"code":"import _toConsumableArray from \"D:/vue_demo/element/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"D:/vue_demo/element/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _asyncToGenerator from \"D:/vue_demo/element/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"D:/vue_demo/element/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/vue_demo/element/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { HOOK_PLUGIN_SETTINGS_SET } from './const';\nimport { now as _now } from './time';\nexport var ApiProxy = /*#__PURE__*/function () {\n  function ApiProxy(plugin, hook) {\n    var _this = this;\n\n    _classCallCheck(this, ApiProxy);\n\n    this.target = null;\n    this.targetQueue = [];\n    this.onQueue = [];\n    this.plugin = plugin;\n    this.hook = hook;\n    var defaultSettings = {};\n\n    if (plugin.settings) {\n      for (var id in plugin.settings) {\n        var item = plugin.settings[id];\n        defaultSettings[id] = item.defaultValue;\n      }\n    }\n\n    var localSettingsSaveId = \"__vue-devtools-plugin-settings__\".concat(plugin.id);\n    var currentSettings = Object.assign({}, defaultSettings);\n\n    try {\n      var raw = localStorage.getItem(localSettingsSaveId);\n      var data = JSON.parse(raw);\n      Object.assign(currentSettings, data);\n    } catch (e) {// noop\n    }\n\n    this.fallbacks = {\n      getSettings: function getSettings() {\n        return currentSettings;\n      },\n      setSettings: function setSettings(value) {\n        try {\n          localStorage.setItem(localSettingsSaveId, JSON.stringify(value));\n        } catch (e) {// noop\n        }\n\n        currentSettings = value;\n      },\n      now: function now() {\n        return _now();\n      }\n    };\n\n    if (hook) {\n      hook.on(HOOK_PLUGIN_SETTINGS_SET, function (pluginId, value) {\n        if (pluginId === _this.plugin.id) {\n          _this.fallbacks.setSettings(value);\n        }\n      });\n    }\n\n    this.proxiedOn = new Proxy({}, {\n      get: function get(_target, prop) {\n        if (_this.target) {\n          return _this.target.on[prop];\n        } else {\n          return function () {\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n              args[_key] = arguments[_key];\n            }\n\n            _this.onQueue.push({\n              method: prop,\n              args: args\n            });\n          };\n        }\n      }\n    });\n    this.proxiedTarget = new Proxy({}, {\n      get: function get(_target, prop) {\n        if (_this.target) {\n          return _this.target[prop];\n        } else if (prop === 'on') {\n          return _this.proxiedOn;\n        } else if (Object.keys(_this.fallbacks).includes(prop)) {\n          return function () {\n            var _this$fallbacks;\n\n            for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n              args[_key2] = arguments[_key2];\n            }\n\n            _this.targetQueue.push({\n              method: prop,\n              args: args,\n              resolve: function resolve() {}\n            });\n\n            return (_this$fallbacks = _this.fallbacks)[prop].apply(_this$fallbacks, args);\n          };\n        } else {\n          return function () {\n            for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n              args[_key3] = arguments[_key3];\n            }\n\n            return new Promise(function (resolve) {\n              _this.targetQueue.push({\n                method: prop,\n                args: args,\n                resolve: resolve\n              });\n            });\n          };\n        }\n      }\n    });\n  }\n\n  _createClass(ApiProxy, [{\n    key: \"setRealTarget\",\n    value: function () {\n      var _setRealTarget = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(target) {\n        var _iterator, _step, _this$target$on, item, _iterator2, _step2, _this$target, _item;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.target = target;\n                _iterator = _createForOfIteratorHelper(this.onQueue);\n\n                try {\n                  for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                    item = _step.value;\n\n                    (_this$target$on = this.target.on)[item.method].apply(_this$target$on, _toConsumableArray(item.args));\n                  }\n                } catch (err) {\n                  _iterator.e(err);\n                } finally {\n                  _iterator.f();\n                }\n\n                _iterator2 = _createForOfIteratorHelper(this.targetQueue);\n                _context.prev = 4;\n\n                _iterator2.s();\n\n              case 6:\n                if ((_step2 = _iterator2.n()).done) {\n                  _context.next = 15;\n                  break;\n                }\n\n                _item = _step2.value;\n                _context.t0 = _item;\n                _context.next = 11;\n                return (_this$target = this.target)[_item.method].apply(_this$target, _toConsumableArray(_item.args));\n\n              case 11:\n                _context.t1 = _context.sent;\n\n                _context.t0.resolve.call(_context.t0, _context.t1);\n\n              case 13:\n                _context.next = 6;\n                break;\n\n              case 15:\n                _context.next = 20;\n                break;\n\n              case 17:\n                _context.prev = 17;\n                _context.t2 = _context[\"catch\"](4);\n\n                _iterator2.e(_context.t2);\n\n              case 20:\n                _context.prev = 20;\n\n                _iterator2.f();\n\n                return _context.finish(20);\n\n              case 23:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[4, 17, 20, 23]]);\n      }));\n\n      function setRealTarget(_x) {\n        return _setRealTarget.apply(this, arguments);\n      }\n\n      return setRealTarget;\n    }()\n  }]);\n\n  return ApiProxy;\n}();","map":{"version":3,"sources":["D:/vue_demo/element/node_modules/@vue/devtools-api/lib/esm/proxy.js"],"names":["HOOK_PLUGIN_SETTINGS_SET","now","ApiProxy","plugin","hook","target","targetQueue","onQueue","defaultSettings","settings","id","item","defaultValue","localSettingsSaveId","currentSettings","Object","assign","raw","localStorage","getItem","data","JSON","parse","e","fallbacks","getSettings","setSettings","value","setItem","stringify","on","pluginId","proxiedOn","Proxy","get","_target","prop","args","push","method","proxiedTarget","keys","includes","resolve","Promise"],"mappings":"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","sourcesContent":["import { HOOK_PLUGIN_SETTINGS_SET } from './const';\nimport { now } from './time';\nexport class ApiProxy {\n    constructor(plugin, hook) {\n        this.target = null;\n        this.targetQueue = [];\n        this.onQueue = [];\n        this.plugin = plugin;\n        this.hook = hook;\n        const defaultSettings = {};\n        if (plugin.settings) {\n            for (const id in plugin.settings) {\n                const item = plugin.settings[id];\n                defaultSettings[id] = item.defaultValue;\n            }\n        }\n        const localSettingsSaveId = `__vue-devtools-plugin-settings__${plugin.id}`;\n        let currentSettings = Object.assign({}, defaultSettings);\n        try {\n            const raw = localStorage.getItem(localSettingsSaveId);\n            const data = JSON.parse(raw);\n            Object.assign(currentSettings, data);\n        }\n        catch (e) {\n            // noop\n        }\n        this.fallbacks = {\n            getSettings() {\n                return currentSettings;\n            },\n            setSettings(value) {\n                try {\n                    localStorage.setItem(localSettingsSaveId, JSON.stringify(value));\n                }\n                catch (e) {\n                    // noop\n                }\n                currentSettings = value;\n            },\n            now() {\n                return now();\n            },\n        };\n        if (hook) {\n            hook.on(HOOK_PLUGIN_SETTINGS_SET, (pluginId, value) => {\n                if (pluginId === this.plugin.id) {\n                    this.fallbacks.setSettings(value);\n                }\n            });\n        }\n        this.proxiedOn = new Proxy({}, {\n            get: (_target, prop) => {\n                if (this.target) {\n                    return this.target.on[prop];\n                }\n                else {\n                    return (...args) => {\n                        this.onQueue.push({\n                            method: prop,\n                            args,\n                        });\n                    };\n                }\n            },\n        });\n        this.proxiedTarget = new Proxy({}, {\n            get: (_target, prop) => {\n                if (this.target) {\n                    return this.target[prop];\n                }\n                else if (prop === 'on') {\n                    return this.proxiedOn;\n                }\n                else if (Object.keys(this.fallbacks).includes(prop)) {\n                    return (...args) => {\n                        this.targetQueue.push({\n                            method: prop,\n                            args,\n                            resolve: () => { },\n                        });\n                        return this.fallbacks[prop](...args);\n                    };\n                }\n                else {\n                    return (...args) => {\n                        return new Promise(resolve => {\n                            this.targetQueue.push({\n                                method: prop,\n                                args,\n                                resolve,\n                            });\n                        });\n                    };\n                }\n            },\n        });\n    }\n    async setRealTarget(target) {\n        this.target = target;\n        for (const item of this.onQueue) {\n            this.target.on[item.method](...item.args);\n        }\n        for (const item of this.targetQueue) {\n            item.resolve(await this.target[item.method](...item.args));\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}